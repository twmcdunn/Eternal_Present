#BlueJ class context
comment0.target=OSCParser
comment0.text=\n\ Converts\ a\ byte\ array\ conforming\ to\ the\ OSC\ byte\ stream\ format\ into\ Java\ objects.\n\ This\ class\ is\ NOT\ thread-save,\ and\ will\ produce\ invalid\ results\ and\ errors\n\ if\ used\ by\ multiple\ threads\ simultaneously.\n\ Please\ use\ a\ separate\ instance\ per\ thread.\n
comment1.params=identifierToType\ properties
comment1.target=OSCParser(java.util.Map,\ java.util.Map)
comment1.text=\n\ Creates\ a\ new\ parser\ with\ all\ the\ required\ ingredients.\n\ @param\ identifierToType\ all\ of\ these,\ and\ only\ these\ arguments\ will\ be\n\ \ \ parsable\ by\ this\ object,\ that\ are\ supported\ by\ these\ handlers\n\ @param\ properties\ see\ {@link\ ArgumentHandler\#setProperties(Map)}\n
comment10.params=rawInput
comment10.target=java.lang.CharSequence\ readTypes(java.nio.ByteBuffer)
comment10.text=\n\ Reads\ the\ types\ of\ the\ arguments\ from\ the\ byte\ stream.\n\ @return\ a\ char\ array\ with\ the\ types\ of\ the\ arguments,\n\ \ \ or\ <code>null</code>,\ in\ case\ of\ no\ arguments\n
comment11.params=rawInput\ typeIdentifier
comment11.target=java.lang.Object\ readArgument(java.nio.ByteBuffer,\ char)
comment11.text=\n\ Reads\ an\ object\ of\ the\ type\ specified\ by\ the\ type\ char.\n\ @param\ typeIdentifier\ type\ of\ the\ argument\ to\ read\n\ @return\ a\ Java\ representation\ of\ the\ argument\n
comment12.params=rawInput\ typeIdentifiers\ pos
comment12.target=java.util.List\ readArray(java.nio.ByteBuffer,\ java.lang.CharSequence,\ int)
comment12.text=\n\ Reads\ an\ array\ of\ arguments\ from\ the\ byte\ stream.\n\ @param\ typeIdentifiers\ type\ identifiers\ of\ the\ whole\ message\n\ @param\ pos\ at\ which\ position\ to\ start\ reading\n\ @return\ the\ array\ that\ was\ read\n
comment2.params=input
comment2.target=void\ align(java.nio.ByteBuffer)
comment2.text=\n\ If\ not\ yet\ aligned,\ move\ the\ position\ to\ the\ next\ index\ dividable\ by\n\ {@link\ \#ALIGNMENT_BYTES}.\n\ @param\ input\ to\ be\ aligned\n\ @see\ OSCSerializer\#align\n
comment3.params=
comment3.target=java.util.Map\ getIdentifierToTypeMapping()
comment4.params=
comment4.target=java.util.Map\ getProperties()
comment4.text=\n\ Returns\ the\ set\ of\ properties\ this\ parser\ was\ created\ with.\n\ @return\ the\ set\ of\ properties\ to\ adhere\ to\n\ @see\ ArgumentHandler\#setProperties(Map)\n
comment5.params=rawInput
comment5.target=OSCPacket\ convert(java.nio.ByteBuffer)
comment5.text=\n\ Converts\ a\ byte-buffer\ into\ an\ {@link\ OSCPacket}\n\ (either\ an\ {@link\ OSCMessage}\ or\ {@link\ OSCBundle}).\n\ @param\ rawInput\ the\ storage\ containing\ the\ raw\ OSC\ packet\n\ @return\ the\ successfully\ parsed\ OSC\ packet\n\ @throws\ OSCParseException\ if\ the\ input\ has\ an\ invalid\ format\n
comment6.params=rawInput
comment6.target=boolean\ isBundle(java.nio.ByteBuffer)
comment6.text=\n\ Checks\ whether\ my\ byte\ array\ is\ a\ bundle.\n\ From\ the\ OSC\ 1.0\ specifications\:\n\ <quote>\n\ The\ contents\ of\ an\ OSC\ packet\ must\ be\ either\ an\ OSC\ Message\n\ or\ an\ OSC\ Bundle.\ The\ first\ byte\ of\ the\ packet's\ contents\ unambiguously\n\ distinguishes\ between\ these\ two\ alternatives.\n\ </quote>\n\ Meaning,\ if\ the\ first\ byte\ is\ '\#',\ the\ packet\ is\ a\ bundle,\n\ otherwise\ it\ is\ a\ message.\n\ Yet,\ the\ OSC\ standard\ body\ later\ itself\ broke\ with\ this\ standard/concept,\n\ when\ they\ released\ a\ document\ suggesting\ to\ use\ messages\n\ with\ an\ address\ of\ "\#reply"\ for\ a\ stateful\ meta\ protocol\n\ in\ the\ following\ document\:\n\n\ @see\ <a\ href\="http\://opensoundcontrol.org/files/osc-query-system.pdf">\n\ \ \ A\ Query\ System\ for\ Open\ Sound\ Control\ (Draft\ Proposal)</a>\n\n\ @return\ true\ if\ it\ the\ byte\ array\ is\ a\ bundle,\ false\ o.w.\n
comment7.params=rawInput
comment7.target=OSCBundle\ convertBundle(java.nio.ByteBuffer)
comment7.text=\n\ Converts\ the\ byte\ array\ to\ a\ bundle.\n\ Assumes\ that\ the\ byte\ array\ is\ a\ bundle.\n\ @return\ a\ bundle\ containing\ the\ data\ specified\ in\ the\ byte\ stream\n
comment8.params=rawInput
comment8.target=OSCMessage\ convertMessage(java.nio.ByteBuffer)
comment8.text=\n\ Converts\ the\ byte\ array\ to\ a\ simple\ message.\n\ Assumes\ that\ the\ byte\ array\ is\ a\ message.\n\ @return\ a\ message\ containing\ the\ data\ specified\ in\ the\ byte\ stream\n
comment9.params=rawInput
comment9.target=java.lang.String\ readString(java.nio.ByteBuffer)
comment9.text=\n\ Reads\ a\ string\ from\ the\ byte\ stream.\n\ @return\ the\ next\ string\ in\ the\ byte\ stream\n
numComments=13
